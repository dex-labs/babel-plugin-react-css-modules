{"version":3,"file":"utils.js","names":["_fs","_interopRequireDefault","require","_path","_cssesc","_loaderUtils","e","__esModule","default","normalizePath","file","path","sep","replace","filenameReservedRegex","reControlChars","escapeLocalident","localident","cssesc","isIdentifier","getPackageInfo","folder","res","cache","pp","resolve","fs","existsSync","name","root","getLocalIdent","resourcePath","localIdentName","localName","options","packageInfo","dirname","request","relative","interpolateName","content","context","exports","generateScopedNameFactory","assetPath"],"sources":["../src/utils.js"],"sourcesContent":["// This module provides a stable implementation of getLocalIdent(),\n// and generateScopedName() functions, which may be used to override\n// default classname generation algorithms of `css-loader` and this\n// plugin, to be independent of internal `css-loader` changes that\n// from time-to-time alter the output classnames without solid reasons.\n\nimport fs from 'fs';\nimport path from 'path';\nimport cssesc from 'cssesc';\nimport {\n  interpolateName,\n} from 'loader-utils';\n\n/**\n * Normalizes file path to OS-independent format (adopted from css-loader).\n *\n * @ignore\n * @param {string} file\n * @returns {string}\n */\nconst normalizePath = (file) => (path.sep === '\\\\' ? file.replace(/\\\\/gu, '/') : file);\n\nconst filenameReservedRegex = /[\"*/:<>?\\\\|]/gu;\n\n// eslint-disable-next-line no-control-regex\nconst reControlChars = /[\\u0000-\\u001F\\u0080-\\u009F]/gu;\n\nconst escapeLocalident = (localident) => cssesc(\n  localident\n  // For `[hash]` placeholder\n    .replace(/^((-?\\d)|--)/u, '_$1')\n    .replace(filenameReservedRegex, '-')\n    .replace(reControlChars, '-')\n    .replace(/\\./gu, '-'),\n  { isIdentifier: true },\n);\n\n/**\n * Returns the name of package containing the folder; i.e. it recursively looks\n * up from the folder for the closest package.json file, and returns the name in\n * that file. It also caches the results from previously fisited folders.\n *\n * @ignore\n * @param {string} folder\n * @returns {string}\n */\nconst getPackageInfo = (folder) => {\n  let res = getPackageInfo.cache[folder];\n  if (!res) {\n    const pp = path.resolve(folder, 'package.json');\n    /* eslint-disable global-require, import/no-dynamic-require */\n    res = fs.existsSync(pp) ? {\n      name: require(pp).name,\n      root: folder,\n    } : getPackageInfo(path.resolve(folder, '..'));\n    /* eslint-enable global-require, import/no-dynamic-require */\n    getPackageInfo.cache[folder] = res;\n  }\n\n  return res;\n};\n\ngetPackageInfo.cache = {};\n\nconst getLocalIdent = (\n  { resourcePath },\n  localIdentName,\n  localName,\n  options = {},\n) => {\n  const packageInfo = getPackageInfo(path.dirname(resourcePath));\n  const request = normalizePath(path.relative(packageInfo.root, resourcePath));\n\n  return interpolateName({\n    resourcePath,\n  }, localIdentName, {\n    ...options,\n    content: `${packageInfo.name + request}\\u0000${localName}`,\n    context: packageInfo.root,\n  }).replace(/\\[package\\]/giu, packageInfo.name)\n    .replace(/\\[local\\]/giu, localName)\n    .replace(/[@+/]/gu, '-');\n};\n\nconst generateScopedNameFactory = (localIdentName) => (localName, assetPath) => escapeLocalident(\n  getLocalIdent(\n    { resourcePath: assetPath },\n    localIdentName,\n    localName,\n    {},\n  ),\n);\n\nexport {\n  generateScopedNameFactory,\n  getLocalIdent,\n};\n"],"mappings":";;;;;;AAMA,IAAAA,GAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,KAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,OAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AAEsB,SAAAD,uBAAAK,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAXtB;AACA;AACA;AACA;AACA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,aAAa,GAAIC,IAAI,IAAMC,aAAI,CAACC,GAAG,KAAK,IAAI,GAAGF,IAAI,CAACG,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,GAAGH,IAAK;AAEtF,MAAMI,qBAAqB,GAAG,gBAAgB;;AAE9C;AACA,MAAMC,cAAc,GAAG,gCAAgC;AAEvD,MAAMC,gBAAgB,GAAIC,UAAU,IAAK,IAAAC,eAAM,EAC7CD;AACA;AAAA,CACGJ,OAAO,CAAC,eAAe,EAAE,KAAK,CAAC,CAC/BA,OAAO,CAACC,qBAAqB,EAAE,GAAG,CAAC,CACnCD,OAAO,CAACE,cAAc,EAAE,GAAG,CAAC,CAC5BF,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,EACvB;EAAEM,YAAY,EAAE;AAAK,CACvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAIC,MAAM,IAAK;EACjC,IAAIC,GAAG,GAAGF,cAAc,CAACG,KAAK,CAACF,MAAM,CAAC;EACtC,IAAI,CAACC,GAAG,EAAE;IACR,MAAME,EAAE,GAAGb,aAAI,CAACc,OAAO,CAACJ,MAAM,EAAE,cAAc,CAAC;IAC/C;IACAC,GAAG,GAAGI,WAAE,CAACC,UAAU,CAACH,EAAE,CAAC,GAAG;MACxBI,IAAI,EAAE1B,OAAO,CAACsB,EAAE,CAAC,CAACI,IAAI;MACtBC,IAAI,EAAER;IACR,CAAC,GAAGD,cAAc,CAACT,aAAI,CAACc,OAAO,CAACJ,MAAM,EAAE,IAAI,CAAC,CAAC;IAC9C;IACAD,cAAc,CAACG,KAAK,CAACF,MAAM,CAAC,GAAGC,GAAG;EACpC;EAEA,OAAOA,GAAG;AACZ,CAAC;AAEDF,cAAc,CAACG,KAAK,GAAG,CAAC,CAAC;AAEzB,MAAMO,aAAa,GAAGA,CACpB;EAAEC;AAAa,CAAC,EAChBC,cAAc,EACdC,SAAS,EACTC,OAAO,GAAG,CAAC,CAAC,KACT;EACH,MAAMC,WAAW,GAAGf,cAAc,CAACT,aAAI,CAACyB,OAAO,CAACL,YAAY,CAAC,CAAC;EAC9D,MAAMM,OAAO,GAAG5B,aAAa,CAACE,aAAI,CAAC2B,QAAQ,CAACH,WAAW,CAACN,IAAI,EAAEE,YAAY,CAAC,CAAC;EAE5E,OAAO,IAAAQ,4BAAe,EAAC;IACrBR;EACF,CAAC,EAAEC,cAAc,EAAE;IACjB,GAAGE,OAAO;IACVM,OAAO,EAAE,GAAGL,WAAW,CAACP,IAAI,GAAGS,OAAO,SAASJ,SAAS,EAAE;IAC1DQ,OAAO,EAAEN,WAAW,CAACN;EACvB,CAAC,CAAC,CAAChB,OAAO,CAAC,gBAAgB,EAAEsB,WAAW,CAACP,IAAI,CAAC,CAC3Cf,OAAO,CAAC,cAAc,EAAEoB,SAAS,CAAC,CAClCpB,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC;AAC5B,CAAC;AAAC6B,OAAA,CAAAZ,aAAA,GAAAA,aAAA;AAEF,MAAMa,yBAAyB,GAAIX,cAAc,IAAK,CAACC,SAAS,EAAEW,SAAS,KAAK5B,gBAAgB,CAC9Fc,aAAa,CACX;EAAEC,YAAY,EAAEa;AAAU,CAAC,EAC3BZ,cAAc,EACdC,SAAS,EACT,CAAC,CACH,CACF,CAAC;AAACS,OAAA,CAAAC,yBAAA,GAAAA,yBAAA","ignoreList":[]}