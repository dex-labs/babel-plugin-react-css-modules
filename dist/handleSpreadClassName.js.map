{"version":3,"file":"handleSpreadClassName.js","names":["_core","require","_types","handleSpreadClassName","path","destinationName","classNamesFromSpread","destinationAttribute","node","openingElement","attributes","find","attribute","name","isStringLiteral","value","jsxExpressionContainer","binaryExpression","cloneNode","stringLiteral","isJSXExpressionContainer","expression","_default","exports","default"],"sources":["../src/handleSpreadClassName.js"],"sourcesContent":["// @flow\n\nimport { NodePath } from '@babel/core';\n\nimport {\n  cloneNode,\n  Expression,\n  isStringLiteral,\n  isJSXExpressionContainer,\n  jsxExpressionContainer,\n  binaryExpression,\n  stringLiteral,\n} from '@babel/types';\n\nconst handleSpreadClassName = (\n  path: typeof NodePath,\n  destinationName: string,\n  classNamesFromSpread: typeof Expression,\n) => {\n  const destinationAttribute = path.node.openingElement.attributes\n    .find((attribute) => typeof attribute.name !== 'undefined' && attribute.name.name === destinationName);\n\n  if (!destinationAttribute) {\n    return;\n  }\n\n  if (isStringLiteral(destinationAttribute.value)) {\n    destinationAttribute.value = jsxExpressionContainer(\n      binaryExpression(\n        '+',\n        cloneNode(destinationAttribute.value),\n        binaryExpression(\n          '+',\n          stringLiteral(' '),\n          classNamesFromSpread,\n        ),\n      ),\n    );\n  } else if (isJSXExpressionContainer(destinationAttribute.value)) {\n    destinationAttribute.value = jsxExpressionContainer(\n      binaryExpression(\n        '+',\n        cloneNode(destinationAttribute.value.expression),\n        binaryExpression(\n          '+',\n          stringLiteral(' '),\n          classNamesFromSpread,\n        ),\n      ),\n    );\n  }\n};\n\nexport default handleSpreadClassName;\n"],"mappings":";;;;;;AAEA,IAAAA,KAAA,GAAAC,OAAA;AAEA,IAAAC,MAAA,GAAAD,OAAA;AAUA,MAAME,qBAAqB,GAAGA,CAC5BC,IAAqB,EACrBC,eAAuB,EACvBC,oBAAuC,KACpC;EACH,MAAMC,oBAAoB,GAAGH,IAAI,CAACI,IAAI,CAACC,cAAc,CAACC,UAAU,CAC7DC,IAAI,CAAEC,SAAS,IAAK,OAAOA,SAAS,CAACC,IAAI,KAAK,WAAW,IAAID,SAAS,CAACC,IAAI,CAACA,IAAI,KAAKR,eAAe,CAAC;EAExG,IAAI,CAACE,oBAAoB,EAAE;IACzB;EACF;EAEA,IAAI,IAAAO,sBAAe,EAACP,oBAAoB,CAACQ,KAAK,CAAC,EAAE;IAC/CR,oBAAoB,CAACQ,KAAK,GAAG,IAAAC,6BAAsB,EACjD,IAAAC,uBAAgB,EACd,GAAG,EACH,IAAAC,gBAAS,EAACX,oBAAoB,CAACQ,KAAK,CAAC,EACrC,IAAAE,uBAAgB,EACd,GAAG,EACH,IAAAE,oBAAa,EAAC,GAAG,CAAC,EAClBb,oBACF,CACF,CACF,CAAC;EACH,CAAC,MAAM,IAAI,IAAAc,+BAAwB,EAACb,oBAAoB,CAACQ,KAAK,CAAC,EAAE;IAC/DR,oBAAoB,CAACQ,KAAK,GAAG,IAAAC,6BAAsB,EACjD,IAAAC,uBAAgB,EACd,GAAG,EACH,IAAAC,gBAAS,EAACX,oBAAoB,CAACQ,KAAK,CAACM,UAAU,CAAC,EAChD,IAAAJ,uBAAgB,EACd,GAAG,EACH,IAAAE,oBAAa,EAAC,GAAG,CAAC,EAClBb,oBACF,CACF,CACF,CAAC;EACH;AACF,CAAC;AAAC,IAAAgB,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEarB,qBAAqB","ignoreList":[]}