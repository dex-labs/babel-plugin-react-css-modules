{"version":3,"file":"replaceJsxExpressionContainer.js","names":["_types","_interopRequireWildcard","require","_conditionalClassMerge","_interopRequireDefault","_createObjectExpression","_optionsDefaults","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_default","types","path","sourceAttribute","destinationName","importedHelperIndentifier","styleModuleImportMapIdentifier","options","expressionContainerValue","value","destinationAttribute","node","openingElement","attributes","find","attribute","name","splice","indexOf","args","expression","handleMissingStyleName","optionsDefaults","autoResolveMultipleImports","push","createObjectExpression","styleNameExpression","callExpression","clone","isStringLiteral","jSXAttribute","jSXIdentifier","jSXExpressionContainer","binaryExpression","stringLiteral","isJSXExpressionContainer","conditionalClassMerge","Error","exports"],"sources":["../src/replaceJsxExpressionContainer.js"],"sourcesContent":["// @flow\n\nimport BabelTypes, {\n  binaryExpression,\n  Identifier,\n  isJSXExpressionContainer,\n  isStringLiteral,\n  jSXAttribute,\n  JSXAttribute,\n  jSXExpressionContainer,\n  jSXIdentifier,\n} from '@babel/types';\nimport conditionalClassMerge from './conditionalClassMerge';\nimport createObjectExpression from './createObjectExpression';\nimport optionsDefaults from './schemas/optionsDefaults';\nimport type {\n  GetClassNameOptionsType,\n} from './types';\n\nexport default (\n  types: typeof BabelTypes,\n  path: Object,\n  sourceAttribute: typeof JSXAttribute,\n  destinationName: string,\n  importedHelperIndentifier: typeof Identifier,\n  styleModuleImportMapIdentifier: typeof Identifier,\n  options: GetClassNameOptionsType,\n): void => {\n  const expressionContainerValue = sourceAttribute.value;\n  const destinationAttribute = path.node.openingElement.attributes\n    .find((attribute) => typeof attribute.name !== 'undefined' && attribute.name.name === destinationName);\n\n  if (destinationAttribute) {\n    path.node.openingElement.attributes.splice(\n      path.node.openingElement.attributes.indexOf(destinationAttribute),\n      1,\n    );\n  }\n\n  path.node.openingElement.attributes.splice(\n    path.node.openingElement.attributes.indexOf(sourceAttribute),\n    1,\n  );\n\n  const args = [\n    expressionContainerValue.expression,\n    styleModuleImportMapIdentifier,\n  ];\n\n  // Only provide options argument if the options are something other than default\n  // This helps save a few bits in the generated user code\n  if (options.handleMissingStyleName !== optionsDefaults.handleMissingStyleName\n    || options.autoResolveMultipleImports !== optionsDefaults.autoResolveMultipleImports) {\n    args.push(createObjectExpression(types, options));\n  }\n\n  const styleNameExpression = types.callExpression(\n    types.clone(importedHelperIndentifier),\n    args,\n  );\n\n  if (destinationAttribute) {\n    if (isStringLiteral(destinationAttribute.value)) {\n      path.node.openingElement.attributes.push(jSXAttribute(\n        jSXIdentifier(destinationName),\n        jSXExpressionContainer(\n          binaryExpression(\n            '+',\n            types.stringLiteral(`${destinationAttribute.value.value} `),\n            styleNameExpression,\n          ),\n        ),\n      ));\n    } else if (isJSXExpressionContainer(destinationAttribute.value)) {\n      path.node.openingElement.attributes.push(jSXAttribute(\n        jSXIdentifier(destinationName),\n        jSXExpressionContainer(\n          conditionalClassMerge(\n            destinationAttribute.value.expression,\n            styleNameExpression,\n          ),\n        ),\n      ));\n    } else {\n      throw new Error(`Unexpected attribute value: ${destinationAttribute.value}`);\n    }\n  } else {\n    path.node.openingElement.attributes.push(jSXAttribute(\n      jSXIdentifier(destinationName),\n      jSXExpressionContainer(\n        styleNameExpression,\n      ),\n    ));\n  }\n};\n"],"mappings":"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","ignoreList":[]}